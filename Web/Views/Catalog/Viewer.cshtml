@{
    ViewData["Title"] = ViewBag.PdfName;
    Layout = null; // Use null if you want NO layout
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.PdfName</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/turn.js@4/turn.min.css" />
    <style>
        body {
            background-color: #f5f5f5;
            margin: 0;
            padding: 20px;
            font-family: sans-serif;
            text-align: center;
        }

        #flipbook {
            width: 800px;
            height: 500px;
            margin: auto;
        }

            #flipbook .page {
                background-color: white;
                box-shadow: 0 0 5px rgba(0,0,0,0.3);
            }

        canvas {
            width: 100%;
            height: auto;
            display: block;
        }
    </style>
</head>
<body>

    <h2>@ViewBag.PdfName</h2>

    <div id="flipbook"></div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/turn.js@4/turn.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.14.305/pdf.min.js"></script>
    <script>
        const pdfUrl = '@Url.Content(ViewBag.PdfUrl)';
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.14.305/pdf.worker.min.js';

        const loadPdfAsFlipbook = async () => {
            const container = document.getElementById("flipbook");
            const pdf = await pdfjsLib.getDocument(pdfUrl).promise;

            for (let pageNumber = 1; pageNumber <= pdf.numPages; pageNumber++) {
                const page = await pdf.getPage(pageNumber);
                const viewport = page.getViewport({ scale: 1.5 });

                const canvas = document.createElement("canvas");
                const context = canvas.getContext("2d");

                canvas.width = viewport.width;
                canvas.height = viewport.height;

                await page.render({ canvasContext: context, viewport }).promise;

                const pageDiv = document.createElement("div");
                pageDiv.className = "page";
                pageDiv.appendChild(canvas);
                container.appendChild(pageDiv);
            }

            $('#flipbook').turn({
                width: 800,
                height: 500,
                autoCenter: true,
                direction: 'ltr'
            });
        };

        loadPdfAsFlipbook().catch(err => {
            console.error("Error loading PDF:", err);
            alert("Failed to load PDF. Please check the console.");
        });
    </script>
</body>
</html>
