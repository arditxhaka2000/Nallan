// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230310131524_addedListTypes")]
    partial class addedListTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Certification.CandidateDetailPoliticParty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CandidatePoliticPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidatePoliticPartyId");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<int>("OrderNr")
                        .HasColumnType("int");

                    b.Property<string>("PersonalNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatePoliticPartyId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("GenderId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("CandidateDetailPoliticParties");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticalPartyPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CandidatePoliticPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidatePoliticPartyId");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PersonTypeId");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatePoliticPartyId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("PersonTypeId");

                    b.ToTable("CandidatePoliticalPartyPersons");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticalPartySupport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CandidatePoliticPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidatePoliticPartyId");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatePoliticPartyId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("CandidatePoliticalPartySupports");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticParty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CandidateNr")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PoliticalPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PoliticalPartyId");

                    b.Property<DateTime>("StatementCourtesyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatementCourtesyPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StatementGivenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatementGivenPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypePoliticalPartyId")
                        .HasColumnType("int")
                        .HasColumnName("TypePoliticalPartyId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("PoliticalPartyId");

                    b.HasIndex("TypePoliticalPartyId");

                    b.ToTable("CandidatePoliticParties");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticPartyCommunity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidatePoliticPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidatePoliticPartyId");

                    b.Property<int?>("CommunityId")
                        .HasColumnType("int")
                        .HasColumnName("CommunityId");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidatePoliticPartyId");

                    b.HasIndex("CommunityId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("CandidatePoliticPartyCommunities");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticPartyControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidatePoliticPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidatePoliticPartyId");

                    b.Property<int?>("ControlNameId")
                        .HasColumnType("int")
                        .HasColumnName("ControlNameId");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidatePoliticPartyId");

                    b.HasIndex("ControlNameId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("CandidatePoliticPartyControls");
                });

            modelBuilder.Entity("Data.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CandidatePoliticPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CandidatePoliticPartyId");

                    b.Property<Guid?>("CandidatePoliticalPartyPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PoliticalPartyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PoliticalPartyPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PollingStationChangeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PollingStationChangeId");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CandidatePoliticPartyId");

                    b.HasIndex("CandidatePoliticalPartyPersonId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("PoliticalPartyId");

                    b.HasIndex("PoliticalPartyPersonId");

                    b.HasIndex("PollingStationChangeId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("Data.DocumentTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentDownloadableId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentDownloadableId");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DocumentDownloadableId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("DocumentTranslations");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BankNameId")
                        .HasColumnType("int")
                        .HasColumnName("BankNameId");

                    b.Property<string>("BankNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DeclareEnticity")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeSkillId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeSkillId");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderId");

                    b.Property<bool>("HasCourtCertificate")
                        .HasColumnType("bit");

                    b.Property<int?>("HighestEducationLevelId")
                        .HasColumnType("int")
                        .HasColumnName("HighestEducationLevelId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationUnitId")
                        .HasColumnType("int")
                        .HasColumnName("LocationUnitId");

                    b.Property<int?>("MunicipalityResidenceId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityResidenceId");

                    b.Property<string>("PersonalNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkingPositionId")
                        .HasColumnType("int")
                        .HasColumnName("WorkingPositionId");

                    b.HasKey("Id");

                    b.HasIndex("BankNameId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("GenderId");

                    b.HasIndex("HighestEducationLevelId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("LocationUnitId");

                    b.HasIndex("MunicipalityResidenceId");

                    b.HasIndex("WorkingPositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeEduactionTraining", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcademicTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Certificate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EducationTraningId")
                        .HasColumnType("int")
                        .HasColumnName("EducationTraningId");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<string>("FieldOfStudy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitucionLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitucionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("EducationTraningId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("EmployeeEduactionTrainings");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeEvaluate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ElectionSentence")
                        .HasColumnType("bit");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<bool>("HasViolentPenal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SupervisorRatingId")
                        .HasColumnType("int")
                        .HasColumnName("SupervisorRatingId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("SupervisorRatingId");

                    b.ToTable("EmployeeEvaluates");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeEvaluationTraining", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CompletedTrainingId")
                        .HasColumnType("int")
                        .HasColumnName("CompletedTrainingId");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EmployeeEvaluateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeEvaluateId");

                    b.Property<DateTime?>("FinishedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.HasKey("Id");

                    b.HasIndex("CompletedTrainingId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("EmployeeEvaluateId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("EmployeeEvaluationTraining");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeLanguageSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReadingId")
                        .HasColumnType("int")
                        .HasColumnName("ReadingId");

                    b.Property<int?>("SpeakingId")
                        .HasColumnType("int")
                        .HasColumnName("SpeakingId");

                    b.Property<int?>("UnderstandingId")
                        .HasColumnType("int")
                        .HasColumnName("UnderstandingId");

                    b.Property<int?>("WritingId")
                        .HasColumnType("int")
                        .HasColumnName("WritingId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("ReadingId");

                    b.HasIndex("SpeakingId");

                    b.HasIndex("UnderstandingId");

                    b.HasIndex("WritingId");

                    b.ToTable("EmployeeLanguageSkills");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeSkill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("AccessId")
                        .HasColumnType("int")
                        .HasColumnName("AccessId");

                    b.Property<string>("ApplingReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DatabaseDevelopmentId")
                        .HasColumnType("int")
                        .HasColumnName("DatabaseDevelopmentId");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<int?>("ExcelId")
                        .HasColumnType("int")
                        .HasColumnName("ExcelId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OtherSkills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherSoftProgram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WordId")
                        .HasColumnType("int")
                        .HasColumnName("WordId");

                    b.HasKey("Id");

                    b.HasIndex("AccessId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DatabaseDevelopmentId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("ExcelId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("WordId");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeWorkExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeId");

                    b.Property<string>("EmployerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeavingReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupervisedEmployeeNr")
                        .HasColumnType("int");

                    b.Property<string>("SupervisedEmployeeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("EmployeeWorkExperiences");
                });

            modelBuilder.Entity("Data.General.DocumentDownloadable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("DocumentTypeId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("DocumentDownloadables");
                });

            modelBuilder.Entity("Data.General.DocumentDownloadableTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DocumentDownloadableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DocumentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DocumentId");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentDownloadableId");

                    b.HasIndex("DocumentId");

                    b.HasIndex("LanguageId");

                    b.ToTable("DocumentDownloadableTranslations");
                });

            modelBuilder.Entity("Data.General.Municipality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<string>("PolygonCoordiates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPolingCenterNr")
                        .HasColumnType("int");

                    b.Property<int>("TotalPolingStationsNr")
                        .HasColumnType("int");

                    b.Property<int>("TotalVotersNr")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("Municipalities");
                });

            modelBuilder.Entity("Data.General.MunicipalityTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shortname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("MunicipalityTranslations");
                });

            modelBuilder.Entity("Data.History", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("historyid");

                    b.Property<int>("ActionName")
                        .HasColumnType("int")
                        .HasColumnName("actionname");

                    b.Property<string>("ColumnName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("columnname");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("HistoryParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("HistoryParentId");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ipAddress");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("newvalue");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("objectid");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("oldvalue");

                    b.Property<string>("PcName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pcName");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tablename");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = false,
                            Code = "sq",
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 382, DateTimeKind.Local).AddTicks(4929),
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Albania"
                        },
                        new
                        {
                            Id = 2,
                            Active = false,
                            Code = "en",
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 382, DateTimeKind.Local).AddTicks(4965),
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "English"
                        },
                        new
                        {
                            Id = 3,
                            Active = false,
                            Code = "sr",
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 382, DateTimeKind.Local).AddTicks(4966),
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Serbian"
                        },
                        new
                        {
                            Id = 4,
                            Active = false,
                            Code = "tr",
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 382, DateTimeKind.Local).AddTicks(4968),
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Turkish"
                        },
                        new
                        {
                            Id = 5,
                            Active = false,
                            Code = "bs",
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 382, DateTimeKind.Local).AddTicks(4970),
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bosnian"
                        });
                });

            modelBuilder.Entity("Data.List", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ListTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ListTypeId");

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("ListTypeId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("Data.ListTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ListId")
                        .HasColumnType("int")
                        .HasColumnName("ListId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTransitive")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("ListId");

                    b.ToTable("ListTranslations");
                });

            modelBuilder.Entity("Data.ListType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("ListTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9368),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ElectionType"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9379),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PollingStationType"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9381),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gender"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9383),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PollingStationChangeDecision"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9384),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "DocumentType"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9385),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PersonType"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9386),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Community"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9388),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ControlName"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9389),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PoliticalPartyControlName"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9390),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TypePoliticalParty"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9391),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WorkingPosition"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9393),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "LocationUnit"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9394),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EducationTraning"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9395),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "SupervisorRating"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9397),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CompletedTraining"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9398),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EmployeeLanguage"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2023, 3, 10, 14, 15, 23, 383, DateTimeKind.Local).AddTicks(9399),
                            IsActive = true,
                            IsDeleted = false,
                            LastChangedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "EmployeeLanguageRationg"
                        });
                });

            modelBuilder.Entity("Data.Localization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResourceKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("Localizations");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalParty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DocumentsAccepted")
                        .HasColumnType("bit");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<string>("OfficialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VillageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("PoliticalParties");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalPartyControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ControlNameId")
                        .HasColumnType("int")
                        .HasColumnName("ControlNameId");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PoliticalPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PoliticalPartyId");

                    b.HasKey("Id");

                    b.HasIndex("ControlNameId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("PoliticalPartyId");

                    b.ToTable("PoliticalPartyControls");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalPartyPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PersonTypeId");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PoliticalPartyId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PoliticalPartyId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("PersonTypeId");

                    b.HasIndex("PoliticalPartyId");

                    b.ToTable("PoliticalPartyPersons");
                });

            modelBuilder.Entity("Data.Privileges.ActionRoot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameSr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.ToTable("ActionRoots");
                });

            modelBuilder.Entity("Data.Privileges.UserActionRootRestRight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionRootId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("CanRead")
                        .HasColumnType("bit");

                    b.Property<bool>("CanWrite")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentityRoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActionRootId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("IdentityRoleId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("UserActionRootRestRights");
                });

            modelBuilder.Entity("Data.UserChangeHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChangeInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChangeType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("UserId");

                    b.ToTable("UserChangeHistories");
                });

            modelBuilder.Entity("Data.UserLanguage", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("UserLanguages");
                });

            modelBuilder.Entity("Data.VotersRegistration.Election", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ElectionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionTypeId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionTypeId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("Data.VotersRegistration.ElectionTranslation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int")
                        .HasColumnName("LanguageId");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LastChangedById");

                    b.ToTable("ElectionTranslations");
                });

            modelBuilder.Entity("Data.VotersRegistration.PollingCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ActualNrOfPollingStations")
                        .HasColumnType("int");

                    b.Property<int>("ActualNrOfVoters")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxNrOfPollingStations")
                        .HasColumnType("int");

                    b.Property<int>("MaxNrOfVoters")
                        .HasColumnType("int");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("PollingCenters");
                });

            modelBuilder.Entity("Data.VotersRegistration.PollingStation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PollingCenterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PollingCenterId");

                    b.Property<int?>("PollingStationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PollingStationTypeId");

                    b.Property<int>("TotalNrOfVoters")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("PollingCenterId");

                    b.HasIndex("PollingStationTypeId");

                    b.ToTable("PollingStations");
                });

            modelBuilder.Entity("Data.VotersRegistration.PollingStationChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CurrentPollingCenterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CurrentPollingCenterId");

                    b.Property<int?>("DecisionId")
                        .HasColumnType("int")
                        .HasColumnName("DecisionId");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAEComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<string>("PersonalNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefusalReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RequestedPollingCenterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RequestedPollingCenterId");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("CurrentPollingCenterId");

                    b.HasIndex("DecisionId");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("RequestedPollingCenterId");

                    b.ToTable("PollingStationChanges");
                });

            modelBuilder.Entity("Data.VotersRegistration.Voter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("CreatedById");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("DeletedById");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ElectionId")
                        .HasColumnType("int")
                        .HasColumnName("ElectionId");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("GenderId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastChangedById")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LastChangedById");

                    b.Property<DateTime>("LastChangedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int")
                        .HasColumnName("MunicipalityId");

                    b.Property<Guid?>("PollingCenterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PollingCenterId");

                    b.Property<string>("PollingStationAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PollingStationCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeletedById");

                    b.HasIndex("ElectionId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LastChangedById");

                    b.HasIndex("MunicipalityId");

                    b.HasIndex("PollingCenterId");

                    b.ToTable("voters");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "9e0568ef-f131-4044-9bd9-8d49d186d278",
                            RoleId = "55660013-d101-427f-a62a-f6568b936af1"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Repository.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "55660013-d101-427f-a62a-f6568b936af1",
                            ConcurrencyStamp = "a5380100-246e-4100-a43c-c74834d5f0e4",
                            Name = "Administrator",
                            NormalizedName = "Administrator"
                        });
                });

            modelBuilder.Entity("Data.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int?>("DefaultLanguageId")
                        .HasColumnType("int")
                        .HasColumnName("DefaultLanguageId");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.HasIndex("DefaultLanguageId");

                    b.HasDiscriminator().HasValue("AppUser");

                    b.HasData(
                        new
                        {
                            Id = "9e0568ef-f131-4044-9bd9-8d49d186d278",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e8288859-e743-43fc-a44e-2e0bcf4a8b5f",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "admin@admin.COM",
                            NormalizedUserName = "admin@admin.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEA/ofuZ4Hg1Yb2a6x5mPenDVgMwj47CqgedfVHEYJ7UAIkl6xWaXKMlwt0xQyb72cQ==",
                            PhoneNumber = "+111111111111",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "d4306225-bbee-4316-9bf9-f5d43209669f",
                            TwoFactorEnabled = false,
                            UserName = "admin@admin.COM",
                            FirstName = "Admin",
                            LastName = "ADMIN",
                            active = true
                        });
                });

            modelBuilder.Entity("Data.Certification.CandidateDetailPoliticParty", b =>
                {
                    b.HasOne("Data.Certification.CandidatePoliticParty", "CandidatePoliticParty")
                        .WithMany()
                        .HasForeignKey("CandidatePoliticPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.List", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("CandidatePoliticParty");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Gender");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticalPartyPerson", b =>
                {
                    b.HasOne("Data.Certification.CandidatePoliticParty", "CandidatePoliticParty")
                        .WithMany("CandidatePoliticalPartyPersons")
                        .HasForeignKey("CandidatePoliticPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.HasOne("Data.List", "PersonType")
                        .WithMany()
                        .HasForeignKey("PersonTypeId");

                    b.Navigation("CandidatePoliticParty");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");

                    b.Navigation("PersonType");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticalPartySupport", b =>
                {
                    b.HasOne("Data.Certification.CandidatePoliticParty", "CandidatePoliticParty")
                        .WithMany()
                        .HasForeignKey("CandidatePoliticPartyId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CandidatePoliticParty");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticParty", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.PoliticalSubjects.PoliticalParty", "PoliticalParty")
                        .WithMany()
                        .HasForeignKey("PoliticalPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.List", "TypePoliticalParty")
                        .WithMany()
                        .HasForeignKey("TypePoliticalPartyId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("LastChangedBy");

                    b.Navigation("PoliticalParty");

                    b.Navigation("TypePoliticalParty");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticPartyCommunity", b =>
                {
                    b.HasOne("Data.Certification.CandidatePoliticParty", "CandidatePoliticParty")
                        .WithMany("CandidatePoliticPartyCommunitys")
                        .HasForeignKey("CandidatePoliticPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.List", "Community")
                        .WithMany()
                        .HasForeignKey("CommunityId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CandidatePoliticParty");

                    b.Navigation("Community");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticPartyControl", b =>
                {
                    b.HasOne("Data.Certification.CandidatePoliticParty", "CandidatePoliticParty")
                        .WithMany("CandidatePoliticPartyControls")
                        .HasForeignKey("CandidatePoliticPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.List", "ControlName")
                        .WithMany()
                        .HasForeignKey("ControlNameId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CandidatePoliticParty");

                    b.Navigation("ControlName");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.Document", b =>
                {
                    b.HasOne("Data.Certification.CandidatePoliticParty", "CandidatePoliticParty")
                        .WithMany("Documents")
                        .HasForeignKey("CandidatePoliticPartyId");

                    b.HasOne("Data.Certification.CandidatePoliticalPartyPerson", null)
                        .WithMany("Documents")
                        .HasForeignKey("CandidatePoliticalPartyPersonId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.PoliticalSubjects.PoliticalParty", null)
                        .WithMany("Documents")
                        .HasForeignKey("PoliticalPartyId");

                    b.HasOne("Data.PoliticalSubjects.PoliticalPartyPerson", null)
                        .WithMany("Documents")
                        .HasForeignKey("PoliticalPartyPersonId");

                    b.HasOne("Data.VotersRegistration.PollingStationChange", "PollingStationChange")
                        .WithMany("Documents")
                        .HasForeignKey("PollingStationChangeId");

                    b.Navigation("CandidatePoliticParty");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Language");

                    b.Navigation("LastChangedBy");

                    b.Navigation("PollingStationChange");
                });

            modelBuilder.Entity("Data.DocumentTranslation", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.General.DocumentDownloadable", "DocumentDownloadable")
                        .WithMany()
                        .HasForeignKey("DocumentDownloadableId");

                    b.HasOne("Data.Document", null)
                        .WithMany("DocumentTranslations")
                        .HasForeignKey("DocumentId");

                    b.HasOne("Data.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("DocumentDownloadable");

                    b.Navigation("Language");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.Employee", b =>
                {
                    b.HasOne("Data.List", "BankName")
                        .WithMany()
                        .HasForeignKey("BankNameId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.List", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Data.List", "HighestEducationLevel")
                        .WithMany()
                        .HasForeignKey("HighestEducationLevelId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.List", "LocationUnit")
                        .WithMany()
                        .HasForeignKey("LocationUnitId");

                    b.HasOne("Data.General.Municipality", "MunicipalityResidence")
                        .WithMany()
                        .HasForeignKey("MunicipalityResidenceId");

                    b.HasOne("Data.List", "WorkingPosition")
                        .WithMany()
                        .HasForeignKey("WorkingPositionId");

                    b.Navigation("BankName");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("Gender");

                    b.Navigation("HighestEducationLevel");

                    b.Navigation("LastChangedBy");

                    b.Navigation("LocationUnit");

                    b.Navigation("MunicipalityResidence");

                    b.Navigation("WorkingPosition");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeEduactionTraining", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.List", "EducationTraning")
                        .WithMany()
                        .HasForeignKey("EducationTraningId");

                    b.HasOne("Data.ElectoralBodiesAndObservers.Employee", "Employee")
                        .WithMany("EmployeeEduactionTrainings")
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("EducationTraning");

                    b.Navigation("Employee");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeEvaluate", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.ElectoralBodiesAndObservers.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.List", "SupervisorRating")
                        .WithMany()
                        .HasForeignKey("SupervisorRatingId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Employee");

                    b.Navigation("LastChangedBy");

                    b.Navigation("SupervisorRating");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeEvaluationTraining", b =>
                {
                    b.HasOne("Data.List", "CompletedTraining")
                        .WithMany()
                        .HasForeignKey("CompletedTrainingId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.ElectoralBodiesAndObservers.EmployeeEvaluate", "EmployeeEvaluate")
                        .WithMany("EmployeeEvaluations")
                        .HasForeignKey("EmployeeEvaluateId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("CompletedTraining");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("EmployeeEvaluate");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeLanguageSkill", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.ElectoralBodiesAndObservers.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.List", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.List", "Reading")
                        .WithMany()
                        .HasForeignKey("ReadingId");

                    b.HasOne("Data.List", "Speaking")
                        .WithMany()
                        .HasForeignKey("SpeakingId");

                    b.HasOne("Data.List", "Understanding")
                        .WithMany()
                        .HasForeignKey("UnderstandingId");

                    b.HasOne("Data.List", "Writing")
                        .WithMany()
                        .HasForeignKey("WritingId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Employee");

                    b.Navigation("Language");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Reading");

                    b.Navigation("Speaking");

                    b.Navigation("Understanding");

                    b.Navigation("Writing");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeSkill", b =>
                {
                    b.HasOne("Data.List", "Access")
                        .WithMany()
                        .HasForeignKey("AccessId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.List", "DatabaseDevelopment")
                        .WithMany()
                        .HasForeignKey("DatabaseDevelopmentId");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.ElectoralBodiesAndObservers.Employee", "Employee")
                        .WithOne("EmployeeSkill")
                        .HasForeignKey("Data.ElectoralBodiesAndObservers.EmployeeSkill", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.List", "Excel")
                        .WithMany()
                        .HasForeignKey("ExcelId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.List", "Word")
                        .WithMany()
                        .HasForeignKey("WordId");

                    b.Navigation("Access");

                    b.Navigation("CreatedBy");

                    b.Navigation("DatabaseDevelopment");

                    b.Navigation("DeletedBy");

                    b.Navigation("Employee");

                    b.Navigation("Excel");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeWorkExperience", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.ElectoralBodiesAndObservers.Employee", "Employee")
                        .WithMany("EmployeeWorkExperiences")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Employee");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.General.DocumentDownloadable", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.List", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("DocumentType");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.General.DocumentDownloadableTranslation", b =>
                {
                    b.HasOne("Data.General.DocumentDownloadable", null)
                        .WithMany("DocumentDownloadableTranslations")
                        .HasForeignKey("DocumentDownloadableId");

                    b.HasOne("Data.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("Data.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.Navigation("Document");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Data.General.Municipality", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.General.MunicipalityTranslation", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany("MunicipalityTranslations")
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Language");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Data.History", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.Language", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.List", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.ListType", "ListType")
                        .WithMany("Lists")
                        .HasForeignKey("ListTypeId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");

                    b.Navigation("ListType");
                });

            modelBuilder.Entity("Data.ListTranslation", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.Language", "Language")
                        .WithMany("ListTranslations")
                        .HasForeignKey("LanguageId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.List", "List")
                        .WithMany("ListTranslations")
                        .HasForeignKey("ListId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Language");

                    b.Navigation("LastChangedBy");

                    b.Navigation("List");
                });

            modelBuilder.Entity("Data.ListType", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.Localization", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Language");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalParty", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalPartyControl", b =>
                {
                    b.HasOne("Data.List", "ControlName")
                        .WithMany()
                        .HasForeignKey("ControlNameId");

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.PoliticalSubjects.PoliticalParty", "PoliticalParty")
                        .WithMany("PoliticalPartyControls")
                        .HasForeignKey("PoliticalPartyId");

                    b.Navigation("ControlName");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");

                    b.Navigation("PoliticalParty");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalPartyPerson", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.HasOne("Data.List", "PersonType")
                        .WithMany()
                        .HasForeignKey("PersonTypeId");

                    b.HasOne("Data.PoliticalSubjects.PoliticalParty", "PoliticalParty")
                        .WithMany("Persons")
                        .HasForeignKey("PoliticalPartyId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");

                    b.Navigation("PersonType");

                    b.Navigation("PoliticalParty");
                });

            modelBuilder.Entity("Data.Privileges.ActionRoot", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.Privileges.UserActionRootRestRight", b =>
                {
                    b.HasOne("Data.Privileges.ActionRoot", "ActionRoot")
                        .WithMany()
                        .HasForeignKey("ActionRootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "IdentityRole")
                        .WithMany()
                        .HasForeignKey("IdentityRoleId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("ActionRoot");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("IdentityRole");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.UserChangeHistory", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("LastChangedBy");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.UserLanguage", b =>
                {
                    b.HasOne("Data.Language", "Language")
                        .WithMany("UserLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.AppUser", "User")
                        .WithMany("UserLanguages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.VotersRegistration.Election", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.List", "ElectionType")
                        .WithMany()
                        .HasForeignKey("ElectionTypeId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("ElectionType");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.VotersRegistration.ElectionTranslation", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany("Translations")
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("Language");

                    b.Navigation("LastChangedBy");
                });

            modelBuilder.Entity("Data.VotersRegistration.PollingCenter", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");
                });

            modelBuilder.Entity("Data.VotersRegistration.PollingStation", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.VotersRegistration.PollingCenter", "PollingCenter")
                        .WithMany()
                        .HasForeignKey("PollingCenterId");

                    b.HasOne("Data.List", "PollingStationType")
                        .WithMany()
                        .HasForeignKey("PollingStationTypeId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("LastChangedBy");

                    b.Navigation("PollingCenter");

                    b.Navigation("PollingStationType");
                });

            modelBuilder.Entity("Data.VotersRegistration.PollingStationChange", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.VotersRegistration.PollingCenter", "CurrentPollingCenter")
                        .WithMany()
                        .HasForeignKey("CurrentPollingCenterId");

                    b.HasOne("Data.List", "Decision")
                        .WithMany()
                        .HasForeignKey("DecisionId");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.List", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.HasOne("Data.VotersRegistration.PollingCenter", "RequestedPollingCenter")
                        .WithMany()
                        .HasForeignKey("RequestedPollingCenterId");

                    b.Navigation("CreatedBy");

                    b.Navigation("CurrentPollingCenter");

                    b.Navigation("Decision");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("Gender");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");

                    b.Navigation("RequestedPollingCenter");
                });

            modelBuilder.Entity("Data.VotersRegistration.Voter", b =>
                {
                    b.HasOne("Data.AppUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("Data.AppUser", "DeletedBy")
                        .WithMany()
                        .HasForeignKey("DeletedById");

                    b.HasOne("Data.VotersRegistration.Election", "Election")
                        .WithMany()
                        .HasForeignKey("ElectionId");

                    b.HasOne("Data.List", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("Data.AppUser", "LastChangedBy")
                        .WithMany()
                        .HasForeignKey("LastChangedById");

                    b.HasOne("Data.General.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");

                    b.HasOne("Data.VotersRegistration.PollingCenter", "PollingCenter")
                        .WithMany()
                        .HasForeignKey("PollingCenterId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DeletedBy");

                    b.Navigation("Election");

                    b.Navigation("Gender");

                    b.Navigation("LastChangedBy");

                    b.Navigation("Municipality");

                    b.Navigation("PollingCenter");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Repository.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Repository.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.AppUser", b =>
                {
                    b.HasOne("Data.Language", "DefaultLanguage")
                        .WithMany("AppUsers")
                        .HasForeignKey("DefaultLanguageId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("DefaultLanguage");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticalPartyPerson", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Data.Certification.CandidatePoliticParty", b =>
                {
                    b.Navigation("CandidatePoliticPartyCommunitys");

                    b.Navigation("CandidatePoliticPartyControls");

                    b.Navigation("CandidatePoliticalPartyPersons");

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Data.Document", b =>
                {
                    b.Navigation("DocumentTranslations");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.Employee", b =>
                {
                    b.Navigation("EmployeeEduactionTrainings");

                    b.Navigation("EmployeeSkill");

                    b.Navigation("EmployeeWorkExperiences");
                });

            modelBuilder.Entity("Data.ElectoralBodiesAndObservers.EmployeeEvaluate", b =>
                {
                    b.Navigation("EmployeeEvaluations");
                });

            modelBuilder.Entity("Data.General.DocumentDownloadable", b =>
                {
                    b.Navigation("DocumentDownloadableTranslations");
                });

            modelBuilder.Entity("Data.General.Municipality", b =>
                {
                    b.Navigation("MunicipalityTranslations");
                });

            modelBuilder.Entity("Data.Language", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("ListTranslations");

                    b.Navigation("UserLanguages");
                });

            modelBuilder.Entity("Data.List", b =>
                {
                    b.Navigation("ListTranslations");
                });

            modelBuilder.Entity("Data.ListType", b =>
                {
                    b.Navigation("Lists");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalParty", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Persons");

                    b.Navigation("PoliticalPartyControls");
                });

            modelBuilder.Entity("Data.PoliticalSubjects.PoliticalPartyPerson", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Data.VotersRegistration.Election", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Data.VotersRegistration.PollingStationChange", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("Data.AppUser", b =>
                {
                    b.Navigation("UserLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
